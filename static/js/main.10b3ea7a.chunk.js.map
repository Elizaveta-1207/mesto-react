{"version":3,"sources":["images/header-logo.svg","images/profile-avatar.jpg","components/Header.js","components/Footer.js","utils/api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Footer","api","options","this","_token","baseUrl","_authorization","headers","authorization","_contentType","fetch","method","then","res","ok","json","Promise","reject","status","name","link","body","JSON","stringify","cardId","description","about","avatar","Card","likes","onCardClick","aria-label","type","onClick","length","Main","onEditProfile","onAddPlace","onEditAvatar","React","useState","userName","setUserName","userDescription","setUserDescription","initialAvatar","userAvatar","setUserAvatar","cards","setCards","useEffect","promises","getUserInfo","getInitialCards","all","results","user","map","item","id","_id","owner","setupCards","catch","err","console","log","style","backgroundImage","props","key","PopupWithForm","title","buttonTitle","children","isOpen","onClose","action","noValidate","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","card","required","placeholder","maxLength","minLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,yC,kBCA3CD,EAAOC,QAAU,IAA0B,4C,2ICW5BC,MARf,WACE,OACE,4BAAQC,UAAU,UAChB,yBAAKC,IAAKC,IAAMC,IAAI,6CAAUH,UAAU,WCI/BI,MARf,WACE,OACE,4BAAQJ,UAAU,UAChB,uBAAGA,UAAU,qBAAb,wH,cCqJOK,EAAM,I,WAzJjB,WAAYC,GAAU,oBACpBC,KAAKC,OAASF,EAAQG,QACtBF,KAAKG,eAAiBJ,EAAQK,QAAQC,cACtCL,KAAKM,aAAeP,EAAQK,QAAQ,gB,8DAIpC,OAAOG,MAAM,GAAD,OAAIP,KAAKC,OAAT,UAAyB,CACnCO,OAAQ,MACRJ,QAAS,CACPC,cAAeL,KAAKG,kBAErBM,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAINC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAIb,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACjB,OAAOV,MAAM,GAAD,OAAIP,KAAKC,OAAT,UAAyB,CACnCO,OAAQ,OACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,cAEvBY,KAAMC,KAAKC,UAAU,CACnBJ,KAAMA,EACNC,KAAMA,MAEPR,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAINC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAI9BM,GACT,OAAOd,MAAM,GAAD,OAAIP,KAAKC,OAAT,kBAAyBoB,GAAU,CAC7Cb,OAAQ,SACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,gBAEtBG,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAINC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,8BAIjCM,GACN,OAAOd,MAAM,GAAD,OAAIP,KAAKC,OAAT,wBAA+BoB,GAAU,CACnDb,OAAQ,MACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,gBAEtBG,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAINC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAI9BM,GACT,OAAOd,MAAM,GAAD,OAAIP,KAAKC,OAAT,wBAA+BoB,GAAU,CACnDb,OAAQ,SACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,gBAEtBG,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAINC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAKvC,OAAOR,MAAM,GAAD,OAAIP,KAAKC,OAAT,aAA4B,CACtCO,OAAQ,MACRJ,QAAS,CACPC,cAAeL,KAAKG,kBAErBM,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAINC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,qCAIL,IAAtBC,EAAqB,EAArBA,KAAMM,EAAe,EAAfA,YAClB,OAAOf,MAAM,GAAD,OAAIP,KAAKC,OAAT,aAA4B,CACtCO,OAAQ,QACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,cAEvBY,KAAMC,KAAKC,UAAU,CACnBJ,KAAMA,EACNO,MAAOD,MAERb,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAINC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAInB,IAATE,EAAQ,EAARA,KACX,OAAOV,MAAM,GAAD,OAAIP,KAAKC,OAAT,oBAAmC,CAC7CO,OAAQ,QACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,cAEvBY,KAAMC,KAAKC,UAAU,CACnBI,OAAO,GAAD,OAAKP,OAEZR,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAINC,QAAQC,OAAR,gDAA0BJ,EAAIK,gB,KAMxB,CAAQ,CACzBb,QAAS,8CACTE,QAAS,CACPC,cAAe,uCACf,eAAgB,sBCxILoB,MApBf,YAAmD,IAAnCR,EAAkC,EAAlCA,KAAMD,EAA4B,EAA5BA,KAAMU,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAKjC,OACE,wBAAIlC,UAAU,WACZ,4BAAQmC,aAAW,6CAAUC,KAAK,SAASpC,UAAU,oBACrD,yBAAKC,IAAKuB,EAAMrB,IAAKoB,EAAMvB,UAAU,eAAeqC,QAPxD,WACEH,EAAY,CAAEV,KAAMA,EAAMD,KAAMA,OAO9B,yBAAKvB,UAAU,wBACb,wBAAIA,UAAU,kBAAkBuB,GAChC,yBAAKvB,UAAU,kBACb,4BAAQmC,aAAW,2BAAOC,KAAK,SAASpC,UAAU,kBAClD,uBAAGA,UAAU,wBAAwBiC,EAAMK,Y,gBCsDtCC,MAhEf,YAAyE,IAAzDC,EAAwD,EAAxDA,cAAeC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,aAAcR,EAAe,EAAfA,YAAe,EACtCS,IAAMC,SAAS,kEADuB,mBAC/DC,EAD+D,KACrDC,EADqD,OAExBH,IAAMC,SAAS,uHAFS,mBAE/DG,EAF+D,KAE9CC,EAF8C,OAGlCL,IAAMC,SAASK,KAHmB,mBAG/DC,EAH+D,KAGnDC,EAHmD,OAI5CR,IAAMC,SAAS,IAJ6B,mBAI/DQ,EAJ+D,KAIxDC,EAJwD,KAyCtE,OAZAV,IAAMW,WAAU,WACd,IAAMC,EAAW,CAAClD,EAAImD,cAAenD,EAAIoD,mBAEzCrC,QAAQsC,IAAIH,GACTvC,MAAK,SAAC2C,GAvBX,IAAmBC,IAyBHD,EAAQ,GAxBtBb,EAAYc,EAAKrC,MACjByB,EAAmBY,EAAK9B,OACxBqB,EAAcS,EAAK7B,QAIrB,SAAoBqB,GAClBC,EACED,EAAMS,KAAI,SAACC,GAAD,MAAW,CACnBC,GAAID,EAAKE,IACTxC,KAAMsC,EAAKtC,KACXD,KAAMuC,EAAKvC,KACX0C,MAAOH,EAAKG,MACZhC,MAAO6B,EAAK7B,WAYZiC,CAAWP,EAAQ,OAEpBQ,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAR,gBAAqBF,SACtC,IAGD,0BAAMpE,UAAU,QACd,6BAASA,UAAU,WACjB,yBAAKA,UAAU,kBAAkBqC,QAASK,EAAc6B,MAAO,CAAEC,gBAAgB,OAAD,OAAStB,EAAT,QAChF,yBAAKlD,UAAU,iBACb,wBAAIA,UAAU,iBAAiB6C,GAC/B,4BAAQV,aAAW,4HAAwBC,KAAK,SAASpC,UAAU,uBAAuBqC,QAASG,IACnG,uBAAGxC,UAAU,wBAAwB+C,IAEvC,4BAAQZ,aAAW,4EAAgBC,KAAK,SAASpC,UAAU,sBAAsBqC,QAASI,KAG5F,6BAASzC,UAAU,YACjB,wBAAIA,UAAU,kBACXoD,EAAMS,KAAI,SAACY,GAAD,OACT,kBAAC,EAAD,CAAMC,IAAKD,EAAMV,GAAIvC,KAAMiD,EAAMjD,KAAMD,KAAMkD,EAAMlD,KAAMU,MAAOwC,EAAMxC,MAAOC,YAAaA,WC1CvFyC,MAjBf,YAAiF,IAAxDpD,EAAuD,EAAvDA,KAAMqD,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QACnE,OACE,yBAAKhF,UAAS,sBAAiBuB,EAAjB,YAAyBwD,GAAU,iBAC/C,yBAAK/E,UAAU,oBACb,4BAAQmC,aAAW,6CAAUC,KAAK,SAASpC,UAAU,sBAAsBqC,QAAS2C,IACpF,wBAAIhF,UAAU,gBAAgB4E,GAC9B,0BAAMK,OAAO,IAAI1D,KAAK,aAAavB,UAAS,4BAAuBuB,EAAvB,UAAqC2D,YAAU,GACxFJ,EACD,4BAAQ1C,KAAK,SAASpC,UAAU,iBAC7B6E,OCGEM,MAZf,YAAuD,IAAjC3D,EAAgC,EAAhCA,KAAMoD,EAA0B,EAA1BA,MAAOG,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QACzC,OACE,yBAAKhF,UAAS,0BAAqB+E,GAAU,gBAAkBhB,GAAG,eAChE,yBAAK/D,UAAU,wBACb,4BAAQmC,aAAW,8FAAmBC,KAAK,SAASpC,UAAU,sBAAsBqC,QAAS2C,IAC7F,yBAAK/E,IAAKuB,EAAMrB,IAAKyE,EAAO5E,UAAU,oBACtC,wBAAIA,UAAU,oBAAoB4E,MCiE3BQ,MAjEf,WAAgB,IAAD,EAC+CzC,IAAMC,UAAS,GAD9D,mBACNyC,EADM,KACkBC,EADlB,OAEyC3C,IAAMC,UAAS,GAFxD,mBAEN2C,EAFM,KAEeC,EAFf,OAG6C7C,IAAMC,UAAS,GAH5D,mBAGN6C,EAHM,KAGiBC,EAHjB,OAI2B/C,IAAMC,SAAS,CAAEmC,QAAQ,IAJpD,mBAINY,EAJM,KAIQC,EAJR,KA0Bb,SAASC,IACPP,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBE,EAAgB,CAAEb,QAAQ,IAG5B,OACE,yBAAK/E,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMwC,cA9BV,WACE8C,GAA0B,IA6BqB7C,WA1BjD,WACE+C,GAAuB,IAyByD9C,aAtBlF,WACEgD,GAAyB,IAqB4FxD,YAlBvH,SAAyB4D,GACvBF,EAAgB,CACdb,QAAQ,EACRvD,KAAMsE,EAAKtE,KACXoD,MAAOkB,EAAKvE,UAeZ,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAeA,KAAM,OAAQqD,MAAO,4HAAyBC,YAAa,yDAAaE,OAAQM,EAAwBL,QAASa,GAC9H,2BAAOE,UAAQ,EAACxE,KAAK,OAAOa,KAAK,OAAO4D,YAAY,gEAAcC,UAAU,KAAKC,UAAU,IAAIlG,UAAU,iCAAiC+D,GAAG,eAC7I,0BAAMA,GAAG,qBACT,2BAAOgC,UAAQ,EAACxE,KAAK,cAAca,KAAK,OAAO4D,YAAY,8FAAmBC,UAAU,MAAMC,UAAU,IAAIlG,UAAU,wCAAwC+D,GAAG,sBACjK,0BAAMA,GAAG,6BAGX,kBAAC,EAAD,CAAexC,KAAM,MAAOqD,MAAO,gEAAeC,YAAa,6CAAWE,OAAQQ,EAAqBP,QAASa,GAC9G,2BAAOE,UAAQ,EAACxE,KAAK,OAAOa,KAAK,OAAO4D,YAAY,mDAAWC,UAAU,KAAKC,UAAU,IAAIlG,UAAU,kCAAkC+D,GAAG,gBAC3I,0BAAMA,GAAG,sBACT,2BAAOgC,UAAQ,EAACxE,KAAK,OAAOa,KAAK,MAAM4D,YAAY,qGAAqBhG,UAAU,iCAAiC+D,GAAG,eACtH,0BAAMA,GAAG,sBAGX,kBAAC,EAAD,CAAexC,KAAM,SAAUqD,MAAO,wFAAmBC,YAAa,yDAAaE,OAAQU,EAAuBT,QAASa,GACzH,2BAAOE,UAAQ,EAACxE,KAAK,OAAOa,KAAK,MAAM4D,YAAY,qGAAqBhG,UAAU,iCAAiC+D,GAAG,eACtH,0BAAMA,GAAG,sBAGX,kBAAC,EAAD,CAAexC,KAAM,UAAWqD,MAAO,2DAAeC,YAAa,eAAMG,QAASa,IAElF,kBAAC,EAAD,CAAYrE,KAAMmE,EAAanE,KAAMoD,MAAOe,EAAaf,MAAOG,OAAQY,EAAaZ,OAAQC,QAASa,MCxDxFM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/F,MAAK,SAAAgG,GACJA,EAAaC,gBAEd9C,OAAM,SAAA+C,GACL7C,QAAQ6C,MAAMA,EAAMC,c","file":"static/js/main.10b3ea7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile-avatar.4a1ce1f1.jpg\";","import React from \"react\";\r\nimport logo from \"../images/header-logo.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logo} alt=\"логотип\" className=\"logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020. Тимонина Елизавета</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","class Api {\r\n  constructor(options) {\r\n    this._token = options.baseUrl;\r\n    this._authorization = options.headers.authorization;\r\n    this._contentType = options.headers[\"Content-type\"];\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._token}/cards`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  addNewCard({ name, link }) {\r\n    return fetch(`${this._token}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-Type\": this._contentType,\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._token}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-Type\": this._contentType,\r\n      },\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  addLike(cardId) {\r\n    return fetch(`${this._token}/cards/likes/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-Type\": this._contentType,\r\n      },\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  deleteLike(cardId) {\r\n    return fetch(`${this._token}/cards/likes/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-Type\": this._contentType,\r\n      },\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._token}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  editProfile({ name, description }) {\r\n    return fetch(`${this._token}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-Type\": this._contentType,\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: description,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  editAvatar({ link }) {\r\n    return fetch(`${this._token}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-Type\": this._contentType,\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: `${link}`,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n}\r\n\r\n// экземпляра класса Api\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-15\",\r\n  headers: {\r\n    authorization: \"36046fe7-1e8e-4a22-8e60-7f2eb2d5b2d8\",\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import React from \"react\";\r\n\r\nfunction Card({ link, name, likes, onCardClick }) {\r\n  function handleClick() {\r\n    onCardClick({ link: link, name: name });\r\n  }\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <button aria-label=\"Удалить\" type=\"button\" className=\"element__delete\"></button>\r\n      <img src={link} alt={name} className=\"element__img\" onClick={handleClick} />\r\n      <div className=\"element__description\">\r\n        <h2 className=\"element__title\">{name}</h2>\r\n        <div className=\"element__likes\">\r\n          <button aria-label=\"Лайк\" type=\"button\" className=\"element__like\"></button>\r\n          <p className=\"element__like-amount\">{likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { api } from \"../utils/api\";\r\nimport Card from \"./Card\";\r\nimport initialAvatar from \"../images/profile-avatar.jpg\";\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick }) {\r\n  const [userName, setUserName] = React.useState(\"Жак-Ив Кусто\");\r\n  const [userDescription, setUserDescription] = React.useState(\"Исследователь океана\");\r\n  const [userAvatar, setUserAvatar] = React.useState(initialAvatar);\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  // переменная для запоминания пользователя, который что-то делает на страничке (а именно меня)\r\n  // let currentUser = null;\r\n\r\n  // функция установки информации о пользователе, например с сервера\r\n  function setupUser(user) {\r\n    setUserName(user.name);\r\n    setUserDescription(user.about);\r\n    setUserAvatar(user.avatar);\r\n    // currentUser = user;\r\n  }\r\n\r\n  function setupCards(cards) {\r\n    setCards(\r\n      cards.map((item) => ({\r\n        id: item._id,\r\n        link: item.link,\r\n        name: item.name,\r\n        owner: item.owner,\r\n        likes: item.likes,\r\n      }))\r\n    );\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const promises = [api.getUserInfo(), api.getInitialCards()];\r\n\r\n    Promise.all(promises)\r\n      .then((results) => {\r\n        // console.log(results);\r\n        setupUser(results[0]);\r\n        setupCards(results[1]);\r\n      })\r\n      .catch((err) => console.log(`Error ${err}`));\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar\" onClick={onEditAvatar} style={{ backgroundImage: `url(${userAvatar})` }}></div>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{userName}</h1>\r\n          <button aria-label=\"Редактировать профиль\" type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\r\n          <p className=\"profile__description\">{userDescription}</p>\r\n        </div>\r\n        <button aria-label=\"Добавить пост\" type=\"button\" className=\"profile__add-button\" onClick={onAddPlace}></button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        <ul className=\"elements__list\">\r\n          {cards.map((props) => (\r\n            <Card key={props.id} link={props.link} name={props.name} likes={props.likes} onCardClick={onCardClick} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm({ name, title, buttonTitle, children, isOpen, onClose }) {\r\n  return (\r\n    <div className={`popup popup-${name} ${isOpen && \"popup_opened\"}`}>\r\n      <div className=\"popup__container\">\r\n        <button aria-label=\"Закрыть\" type=\"button\" className=\"popup__close-button\" onClick={onClose}></button>\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        <form action=\"#\" name=\"popup-form\" className={`popup__form popup-${name}__form`} noValidate>\r\n          {children}\r\n          <button type=\"submit\" className=\"popup__button\">\r\n            {buttonTitle}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\n\r\nfunction ImagePopup({ link, title, isOpen, onClose }) {\r\n  return (\r\n    <div className={`popup popup-img ${isOpen && \"popup_opened\"}`} id=\"popup-image\">\r\n      <div className=\"popup__img-container\">\r\n        <button aria-label=\"Закрыть картинку\" type=\"button\" className=\"popup__close-button\" onClick={onClose}></button>\r\n        <img src={link} alt={title} className=\"popup__full-img\" />\r\n        <h2 className=\"popup__title-img\">{title}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({ isOpen: false });\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpen: true,\n      link: card.link,\n      title: card.name,\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({ isOpen: false });\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} />\n      <Footer />\n\n      <PopupWithForm name={\"edit\"} title={\"Редактировать профиль\"} buttonTitle={\"Сохранить\"} isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n        <input required name=\"name\" type=\"text\" placeholder=\"Введите имя\" maxLength=\"40\" minLength=\"2\" className=\"popup__input popup__input_name\" id=\"name-input\" />\n        <span id=\"name-input-error\"></span>\n        <input required name=\"description\" type=\"text\" placeholder=\"Введите описание\" maxLength=\"200\" minLength=\"2\" className=\"popup__input popup__input_description\" id=\"description-input\" />\n        <span id=\"description-input-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm name={\"add\"} title={\"Новое место\"} buttonTitle={\"Создать\"} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n        <input required name=\"name\" type=\"text\" placeholder=\"Название\" maxLength=\"30\" minLength=\"1\" className=\"popup__input popup__input_title\" id=\"title-input\" />\n        <span id=\"title-input-error\"></span>\n        <input required name=\"link\" type=\"url\" placeholder=\"Ссылка на картинку\" className=\"popup__input popup__input_link\" id=\"link-input\" />\n        <span id=\"link-input-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm name={\"avatar\"} title={\"Обновить аватар\"} buttonTitle={\"Сохранить\"} isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n        <input required name=\"link\" type=\"url\" placeholder=\"Ссылка на картинку\" className=\"popup__input popup__input_link\" id=\"link-input\" />\n        <span id=\"link-input-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm name={\"confirm\"} title={\"Вы уверены?\"} buttonTitle={\"Да\"} onClose={closeAllPopups}></PopupWithForm>\n\n      <ImagePopup link={selectedCard.link} title={selectedCard.title} isOpen={selectedCard.isOpen} onClose={closeAllPopups} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}